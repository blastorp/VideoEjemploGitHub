@{
    Layout = null;
}
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        display: flex;
        flex-direction: column;
    }

    header {
        background-color: #4CAF50;
        color: white;
        text-align: center;
        padding: 1em;
        position: relative;
    }

    .search-bar {
        margin-top: 10px;
    }

        .search-bar input {
            padding: 10px;
            width: 300px;
            border: none;
            border-radius: 5px;
            margin-right: 10px;
        }

        .search-bar button {
            padding: 10px;
            background-color: #333;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

    #cart {
        position: absolute;
        right: 20px;
        top: 20px;
        font-size: 1.1em;
    }

    aside {
        padding: 20px;
        width: 250px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        margin: 20px;
    }

        aside h3 {
            margin-top: 0;
        }

    .filter {
        margin-bottom: 20px;
    }

    #products {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        margin: 2em;
        flex-grow: 1;
    }

    .product {
        background-color: white;
        border: 1px solid #ddd;
        border-radius: 8px;
        margin: 10px;
        padding: 20px;
        width: 200px;
        text-align: center;
    }

        .product img {
            width: 100%;
            height: auto;
            border-radius: 5px;
        }

        .product h3 {
            font-size: 1.2em;
            color: #333;
        }

        .product p {
            color: #555;
        }

        .product button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
        }

            .product button:hover {
                background-color: #45a049;
            }

    /* Estilos del modal */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
</style>
<header>
    <h1>Bienvenido al Marketplace de Componentes para PC</h1>
    <div class="search-bar">
        <input type="text" id="searchInput" placeholder="Buscar componentes...">
        <button id="searchButton">Buscar</button>
    </div>
    <div id="cart">
        <span>Carrito: <span id="cartCount">0</span> items</span>
    </div>
</header>

<aside>
    <h3>Filtros</h3>
    <div class="filter">
        <h4>Categoría</h4>
        <select id="categoryFilter">
            <option value="all">Todas</option>
            <option value="cpu">CPU</option>
            <option value="gpu">GPU</option>
            <option value="motherboard">Placa Base</option>
            <option value="ram">RAM</option>
            <option value="storage">Almacenamiento</option>
            <option value="Monitores">Monitores</option>
        </select>
    </div>

    <div class="filter">
        <h4>Precio</h4>
        <input type="range" id="priceFilter" min="0" max="1000" value="1000">
        <span id="priceValue">$1000</span>
    </div>
</aside>

<section id="products">
    <!-- Aquí se cargarán los productos -->
</section>

<!-- Modal -->
<div id="productModal" style="display: none;">
    <div class="modal-content">
        <span class="close" style="cursor:pointer;">&times;</span>
        <img id="modalProductImage" src="" alt="Imagen del producto" style="width: 100px;">
        <h3 id="modalProductName"></h3>
        <p id="modalProductDescription"></p>
        <p id="modalProductPrice"></p>
        <button id="addToCartButton">Agregar al Carrito</button>
    </div>
</div>

@* <a class="btn btn-primary col-12" asp-controller="Home" asp-action="AgregarProducto">Agregar Nuevo Producto</a> *@

<script>
    let allProducts = [];
    document.addEventListener('DOMContentLoaded', function () {
        //let allProducts = [];
        let cartCount = 0;
        var data;

        //llenado de select Categoria
        const selectCategorias = document.getElementById("categoryFilter");

        addEventListener('load', cargaProductos, false);

        var conexion1;
        function cargaProductos() {
            conexion1 = new XMLHttpRequest();
            conexion1.onreadystatechange = procesarEventos1;
            conexion1.open("GET", "@Url.Action("ObtenerProductos", "Producto")", true);
            conexion1.send();
        }

        function procesarEventos1() {

            if (conexion1.readyState == 4) {


                data = JSON.parse(conexion1.responseText);
                allProducts = data;
                displayProducts(data)
                data.forEach(
                    function (objeto) {

                        console.log(objeto.nombre + ' ' + objeto.precio)

                    }
                )
            }
        }



        // Cargar productos desde el archivo JSON
        fetch('./webservice/productos.json') // Corregido
            .then(response => response.json())
            .then(data => {
                allProducts = data;
                displayProducts(allProducts); // Mostrar todos los productos al inicio
            })
            .catch(error => console.error('Error al cargar los productos:', error));

        // Mostrar productos en la página
        function displayProducts(products) {
            const productsContainer = document.getElementById('products');
            productsContainer.innerHTML = ''; // Limpiar productos previos

            products.forEach(product => {
                const productDiv = document.createElement('div');
                productDiv.classList.add('product');

                productDiv.innerHTML = `
                    <img src="${product.urlImagen}" alt="${product.nombre}">
                    <h3>${product.nombre}</h3>
                    <p>${product.descripcion}</p>
                    <p>Precio: $${product.precio}</p>
                    <button class="view-details">Ver Detalles</button>
                `;

                productsContainer.appendChild(productDiv);

                // Evento para ver detalles del producto
                const viewDetailsButton = productDiv.querySelector('.view-details');
                viewDetailsButton.addEventListener('click', function () {
                    showModal(product);
                });
            });
        }

        // Mostrar modal con detalles del producto
        function showModal(product) {
            document.getElementById('modalProductName').textContent = product.name;
            document.getElementById('modalProductImage').src = product.image;
            document.getElementById('modalProductDescription').textContent = product.description;
            document.getElementById('modalProductPrice').textContent = `Precio: $${product.price}`;

            const modal = document.getElementById('productModal');
            modal.style.display = "block";

            // Agregar al carrito
            document.getElementById('addToCartButton').onclick = function () {
                cartCount++;
                document.getElementById('cartCount').textContent = cartCount;
                alert(`${product.name} ha sido agregado al carrito.`);
                modal.style.display = "none"; // Cerrar modal después de agregar
            };
        }

        // Cerrar el modal
        const closeModal = document.getElementsByClassName("close")[0];
        closeModal.onclick = function () {
            document.getElementById('productModal').style.display = "none";
        };

        // Filtrar por búsqueda
        const searchInput = document.getElementById('searchInput');
        const searchButton = document.getElementById('searchButton');

        searchButton.addEventListener('click', function () {
            const query = searchInput.value.toLowerCase();
            const filteredProducts = allProducts.filter(product => {
                // console.log(query);
                // console.log(product.nombre.toLowerCase());
                return product.nombre.toLowerCase().includes(query);

            }


            );
            displayProducts(filteredProducts);
            // console.log(filteredProducts);
        });

        // Filtrar por categoría
        const categoryFilter = document.getElementById('categoryFilter');
        categoryFilter.addEventListener('change', function () {
            const selectedCategory = categoryFilter.value;
            const filteredProducts = allProducts.filter(product =>
            //     {
            //     console.log(product.nombreCategoria.toLowerCase());
            //     console.log(selectedCategory.toLowerCase());
            //     selectedCategory === 'todos' || product.nombreCategoria.toLowerCase() === selectedCategory.toLowerCase()
            // }
                selectedCategory === 'all' || product.nombreCategoria.toLowerCase() === selectedCategory.toLowerCase()
            );
            displayProducts(filteredProducts);
            console.log(filteredProducts);
        });

        // Filtrar por precio
        const priceFilter = document.getElementById('priceFilter');
        const priceValue = document.getElementById('priceValue');

        priceFilter.addEventListener('input', function () {
            const maxPrice = priceFilter.value;
            priceValue.textContent = `$${maxPrice}`;

            const filteredProducts = allProducts.filter(product =>
                product.precio <= maxPrice
            );
            displayProducts(filteredProducts);
        });
    });


</script>



